//References and Resources 
* https://ucexperiment.wordpress.com/2015/01/02/arduino-stack-painting/

* http://forum.arduino.cc/index.php?topic=194960.0

// Overview

* The examples below show how stack painting works in .ino files
* Stacks in arduino works as a regualr stack but it grows downwards instead of the normal upwards. It also has a stack pointer which points at the last item of the stack. 

// Examples from the https://ucexperiment.wordpress.com/2015/01/02/arduino-stack-painting/


Typical first instructions are like the following:

ldi  r28, lo8(RAMEND)
ldi  r29, hi8(RAMEND)
out  SPH, r29
out  SPL, r28

Here is an example of how the compiler uses the stack to store variables inside a function :

void example(void) {
  char buffer[16]; //space will be reserved on the stack
 
  //
  //do something here. . .
  //
 
}
 
//result in this machine code:
 
;prologue
  PUSH r28         ;save registers on stack 
  PUSH r29 
  IN   r28,SPL     ;get stack pointer    
  IN   r29,SPH   
  SBIW r28,16      ;reserve 16 bytes space on stack
  OUT  SPH,r29     ;update new stack pointer
  OUT  SPL,r28 
 
;
;do something here. . .
;
 
;epilogue
  ADIW r28,16      ;remove the 16 bytes from the stack
  OUT  SPH,r29     ;restore stack pointer
  OUT  SPL,r28 
  POP  r29         ;restore registers from stack
  POP  r28 
  RET 
}