This file is to show how to disregard comments in a file
This will help us have a better understanding of what we are supposed to do
When it comes to comments.

This file is meant to push the groups knowledge of reading files



while (std::getline(input_file, line))
{
    if (line[0] != "#" )
    {
        std::istringstream iss(line);
        float num; // The number in the line

        //while the iss is a number 
        while ((iss >> num))
        {
            //look at the number
        }
    }


// Here is another instance of ignoring comments.
// Again the following is used to push the groups knowledge of skipping commnets forward.

#include <iostream>
#include <string>
#include <sstream>

std::istream& get_line_strip_comments( std::istream& stm, std::string& str )
{
    if( std::getline( stm, str ) )
    {
        auto pos = str.find( "//" ) ;
        if( pos == 0 ) return get_line_strip_comments( stm, str ) ;
        else if( pos != std::string::npos ) str.erase(pos) ;
    }
    return stm ;
}


int main()
{
    std::istringstream stm( R"(
this is a line with no comments
// this is a comment line
some text // and then a comment
more text / / this is not a comment // but this is\n)" ) ;

    std::string str ;
    while( get_line_strip_comments( stm, str ) ) std::cout << str << '\n' ;
}

///////////////

UPDATE: 2/16/19

I found this code on https://stackoverflow.com/questions/28379413/skipping-comment-lines-starting-with-in-c

This is meant to help the groups knoweledge going forward. I Do Not take credit for this.

while(getline(infile, filename)) {

    filename = ltrim(filename);  // remove leading whitespace
    filename = rtrim(filename);  // remove trailing whitespace

    if(filename.empty() || (filename.find("//") == 0)) {
        continue;
    }

    // increment the line number
    ++line;
}
